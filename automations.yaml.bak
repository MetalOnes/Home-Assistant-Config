##########################################
# Main Automations
##########################################

# Turn on Ext lights after Sunset
- alias: 'Exterior Sunset'
  trigger:
    - platform: sun
      event: sunset
      offset: '00:30:00'
  action:
    service: homeassistant.turn_on
    entity_id: group.exterior

# Turn off Ext lights at sunrise
- alias: 'Exterior Sunrise'
  trigger:
    - platform: sun
      event: sunrise
  action:
    service: homeassistant.turn_off
    entity_id: group.exterior

# Turn on Int Lights 1hr before sunset
- alias: 'Interior Sunset'
  trigger:
    - platform: sun
      event: sunset
      offset: '-02:00:00'
  action:
    service: homeassistant.turn_on
    entity_id: group.int_lights

# Change lights when watching Kodi in the evening
- alias: 'Evening Kodi'
  trigger:
    - platform: state
      entity_id: sensor.harmony_living_room
      to: 'Watch Kodi'
  condition:
    - condition: time
      after: '19:30:00'
  action:
    service: homeassistant.turn_off
    entity_id:
      - light.dining_room_lamp_160
      - light.man_cave_lights_133
      - light.vanity_light_120

# Turn on Desk LEDs when Eric gets home
- alias: EricHomeDeskLEDs
  trigger:
    platform: zone
    entity_id: device_tracker.eric_s7
    zone: zone.home
    event: enter
  action:
    service: homeassistant.turn_on
    entity_id: light.mancave_desk


##########################################
# Telegram stuff
##########################################

# Send Telegram msg when HA is updated

- alias: Update Notifications
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    service: notify.telegram_e
    data:
      title: '*HA Update*'
      message: 'There is a new Home Assistant release available'

# Send Telegram msg when door is locked or unlocked and no one is home

- alias: Unlocked
  trigger:
    platform: state
    entity_id: lock.front_door_19
  condition:
    condition: state
    entity_id: device_tracker.eric_s7
    state: 'not_home'
  action:
    service: notify.telegram_e
    data:
      message: 'Front door has been {{states.lock.front_door_19.state }}'

# Get a notification when public IP changes
- alias: PublicIPChange
  trigger:
    platform: state
    entity_id: sensor.myipopendnscom
  action:
    service: notify.telegram_e
    data:
      message: 'Your public IP has changed to {{states.sensor.myipopendnscom.state }}'

# Send notification when Eric leaves work
- alias: EricLeaveWork
  trigger:
    platform: zone
    entity_id: device_tracker.eric_s7
    zone: zone.eisai
    event: leave
  action:
    service: notify.telegram_e
    data:
      message: 'Eric has left work'

# Send notification when Eric gets to work
- alias: EricLeaveWork
  trigger:
    platform: zone
    entity_id: device_tracker.eric_s7
    zone: zone.eisai
    event: enter
  action:
    service: notify.telegram_e
    data:
      message: 'Eric has gotten to work'

##########################################
# Telegram Commands
##########################################

- alias: 'TeleBot Start'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/start'
  action:
    - service: notify.telegram_e
      data:
#        message: 'commands'
        data:
          keyboard:
            - '/lrlampstat, /lrlamptoggle'

- id: telebot_lrlampstat
  alias: 'Tele LR Lamp Stat'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/lrlampstat'
  action:
    service: notify.telegram_e
    data:
      message: 'The LR Lamp is {{ states.light.lamp_107.state}}'

- id: telebot_lrlamptoggle
  alias: 'Tele LR Lamp Toggle'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/lrlamptoggle'
  action:
    - service: light.toggle
      entity_id: light.lamp_107
    - delay:
        seconds: 3
    - service: notify.telegram_e
      data:
        message: 'The LR Lamp is {{ states.light.lamp_107.state}}'

- alias: 'Telegram bot that reply pong to ping'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/ping'
  action:
    - service: notify.telegram_e
      data:
        message: 'pong'

- alias: 'Reply where V is'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/whereisv'
  action:
    service: notify.telegram_e
    data:
      message: 'Val location: {{ states.device_tracker.val_j7.state}}'

- alias: 'Send snapshot from BDcam'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/bdcam'
  action:
#    - service: shell_command.bd_pic
#    - delay: 0:02
    - service: notify.telegram_e
      data:
        message: 'BD Cam'
        data:
          photo:
#            - file: /home/homeassistant/.homeassistant/www/snaps/bd.jpg    
            - url: http://norobots.crabdance.com:7745/snapshot.cgi
              username: !secret bdcam_user
              password: !secret bdcam_pass
             

##########################################
# Fun Stuff
##########################################

# Change Desk LEDs based on chance of rain

- id: darksky_deskled_rain
  alias: 'Gonna Rain'
  trigger:
    platform: numeric_state
    entity_id: sensor.dark_sky_precip_intensity
    above: 0
  condition:
    - condition: state
      entity_id: device_tracker.eric_s7
      state: 'home'
    - condition: state
      entity_id: light.mancave_desk
      state: 'on'
  action:
    - service: light.turn_on
      data:
        entity_id: light.mancave_desk
        effect: blue_fade
#    - service: tts.google_say
#      entity_id: media_player.cca_man_cave
#      data_template:
#        message: 'Currently the precipitation intensity is {{ states.sensor.dark_sky_precip_intensity.state }}'

- id: darksky_deskled_notrain
  alias: 'Not Gonna Rain'
  trigger:
    platform: numeric_state
    entity_id: sensor.dark_sky_precip_intensity
    below: 1
  condition:
    - condition: state
      entity_id: device_tracker.eric_s7
      state: 'home'
    - condition: state
      entity_id: light.mancave_desk
      state: 'on'
  action:
    - service: light.turn_on
      data:
        entity_id: light.mancave_desk
        rgb_color: ['0','68','191']
        brightness_pct: 75


# Notification when ISS is visible

- alias: 'ISS Visible'
  trigger:
    - platform: state
      entity_id: binary_sensor.iss
      to: 'on'
  condition:
    - condition: state
      entity_id: device_tracker.eric_s7
      state: 'home'
  action:
    service: notify.telegram_e
    data:
      message: 'ISS visible at {{states.binary_sensor.iss.attributes.next_rise }}'

##########################################
# Harmony control
##########################################

- alias: Harmony
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_select.living_room_tv
    from: 'Select Activity'
  action:
    - service: remote.turn_on
      entity_id: remote.living_room
      data_template:
        activity: >
          {% if is_state("input_select.living_room_tv", "Watch TV") %}
            25502319
          {% elif is_state("input_select.living_room_tv", "Watch Kodi") %}
            25502126
          {% elif is_state("input_select.living_room_tv", "Chromecast") %}
            25502458
          {% elif is_state("input_select.living_room_tv", "WiiU") %}
            25502478
          {% elif is_state("input_select.living_room_tv", "Music") %}
            25502405
          {% else %}
          {% endif %}
    - service: input_select.select_option
      entity_id: input_select.living_room_tv
      data_template:
        option: "Select Activity"

- alias: Harmony Off
  hide_entity: True
  trigger:
    platform: state
    entity_id: input_select.living_room_tv
    to: 'Power Off'
  action:
    - service: remote.turn_off
      entity_id: remote.living_room
    - service: input_select.select_option
      entity_id: input_select.living_room_tv
      data_template:
        option: "Select Activity"
